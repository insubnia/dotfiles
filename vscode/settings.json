{
  "workbench.colorTheme": "GitHub Dark Dimmed",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.tree.indent": 12,

  "terminal.integrated.shell.windows": "%SystemRoot%\\System32\\cmd.exe",
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.fontSize": 13,

  "editor": {
    "insertSpaces": true,
    "wordWrap": "off",
    "cursorStyle": "line"
  },
  "editor.renderFinalNewline": "off",
  "editor.inlayHints.enabled": "off",

  "files": {
    "eol": "\n",
    "trimFinalNewlines": true
  },

  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/__pycache__": true,
    "**/*.pyc": true
  },
  "search.exclude": {
    "**/*.a2l": true
  },
  "search.useIgnoreFiles": false,

  "vim": {
    "gdefault": true,
    "useSystemClipboard": true,
    "hlsearch": true,

    "leader": "<space>",
    "useCtrlKeys": true,
    "handleKeys": {
    },

    "_1": "https://demun.github.io/vscode-tutorial/shortcuts/",
    "normalModeKeyBindingsNonRecursive": [
      { "before": [";"], "commands": ["editor.action.showHover"] },
      { "before": ["?"], "commands": ["workbench.action.showAllSymbols"] },
      { "before": ["j"], "after": ["g", "j"] },
      { "before": ["k"], "after": ["g", "k"] },
      { "before": ["T"], "commands": ["outline.focus"] },
      { "before": ["Q"], "after": ["@", "q"] },
      { "before": ["W"], "after": ["@", "w"] },
      { "before": ["Y"], "after": ["y", "$"] },
      { "before": ["c", "w"], "after": ["c", "i", "w"] },
      { "before": ["d", "w"], "after": ["d", "i", "w"] },
      { "before": ["y", "w"], "after": ["y", "i", "w"] },
      { "before": ["g", "d"], "commands": ["editor.action.revealDefinition"] },
      { "before": ["g", "e"], "commands": ["editor.action.rename"] },
      { "before": ["g", "r"], "commands": ["references-view.findReferences"] },
      { "before": ["Z", "Q"], "commands": [":q"] },
      { "before": ["Z", "Z"], "commands": [":wq"] },
      { "before": ["<C-c>"], "commands": ["workbench.action.closeSidebar", "workbench.action.closePanel"] },
      { "before": ["<C-j>"], "commands": ["workbench.action.editor.nextChange"] },
      { "before": ["<C-k>"], "commands": ["workbench.action.editor.previousChange"] },
      { "before": ["<C-t>"], "commands": ["workbench.action.navigateBack"] },
      { "before": ["<C-p>"], "commands": ["workbench.action.quickOpen"] },
      { "before": ["<bs>"], "commands": [":noh"] },
      { "before": ["<tab>"], "after": ["g", "t"] },
      { "before": ["<S-tab>"], "after": ["g", "T"] },
      { "before": ["<leader>", "<space>"], "commands": ["workbench.action.files.saveAll"] },
      { "before": ["<leader>", "f"], "commands": ["workbench.action.findInFiles"] },
      { "before": ["<leader>", "g"], "commands": ["gitlens.compareWith"] },
      { "before": ["<leader>", "h"], "commands": ["editor.action.startFindReplaceAction"] },
      { "before": ["<leader>", "l"], "commands": ["editor.action.formatDocument"] },
      { "before": ["<leader>", "enter"], "commands": ["editor.action.insertLineAfter"] }
    ],
    "visualModeKeyBindingsNonRecursive": [
      { "before": ["<"], "after": ["<", "g", "v"] },
      { "before": [">"], "after": [">", "g", "v"] },
      { "before": ["<leader>", "h"], "commands": ["editor.action.startFindReplaceAction"] },
      { "before": ["<leader>", "l"], "commands": ["editor.action.formatSelection"] }
    ],
    "insertModeKeyBindingsNonRecursive": [
      { "before": ["<C-a>"], "commands": ["cursorHome"] },
      { "before": ["<C-e>"], "commands": ["cursorEnd"] },
      { "before": ["<C-k>"], "commands": ["deleteAllRight"] },
      { "before": ["<C-l>"], "commands": ["editor.action.insertLineAfter"] }
    ],
    "normalModeKeyBindings": [
    ],
    "visualModeKeyBindings": [
    ],
    "insertModeKeyBindings": [
    ]
  },

  "git": {
    "openRepositoryInParentFolders": "always"
  },

  "C_Cpp.intelliSenseEngine": "disabled",
  "[c]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[cpp]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[python]": {
    "editor.formatOnType": true
  },

  "security.workspace.trust.untrustedFiles": "open"
}
