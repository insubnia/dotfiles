snippet cc "(snippet) comment" b
/**
 * $0
 */
endsnippet

snippet "struct\s*" "(snippet) struct NAME { ... }" br
struct ${1:❓} {
	$0
};
endsnippet

snippet "union\s*" "(snippet) union NAME { ... }" br
union ${1:❓} {
	$0
};
endsnippet

snippet "enum\s*" "(snippet) enum { ... }" br
enum {
	${1:❓}
};
endsnippet

snippet "typedef (struct|union|enum) " "(snippet) typedef (struct|union|enum) { ... } TYPE" brA
typedef `!p snip.rv = match.group(1)` {
	$0
} ${1:❓};
endsnippet


snippet "#if (\w+)([ !=]*)" "(snippet) #if MACRO ... #endif /* MACRO */" r
#if `!p snip.rv = match.group(1)``!p snip.rv = match.group(2)`$0
#endif /* `!p snip.rv = match.group(1)` */
endsnippet


snippet cext "(snippet) extern C" b
#ifdef __cplusplus
extern "C" {
#endif

$0

#ifdef __cplusplus
}
#endif
endsnippet


snippet mando "(snippet) MANDO" b
/**
 * Copyright (c) ${1:--- YEAR ---} Mando Corp. All rights reserved.
 *
 * Author: Insub Song (insub.song@halla.com)
 *
 */
${2}
endsnippet


snippet skai "(snippet) SKAIChips" b
/**
 * `!v expand('%:t')` -
 *
 * Copyright (c) `!v strftime("%Y")` SKAIChips Co., Ltd. ALL RIGHTS RESERVED.
 * Author: Insub Song (sis@skaichips.co.kr)
 *
 */
$0
endsnippet


snippet cinc "(snippet) C include set" b
#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
$0
endsnippet


snippet minmax "(snippet) MIN/MAX macro" b
#ifndef MIN
#define MIN(a, b) (((a)<(b))?(a):(b))
#endif /* MIN */
#ifndef MAX
#define MAX(a, b) (((a)>(b))?(a):(b))
#endif /* MAX */
$0
endsnippet
